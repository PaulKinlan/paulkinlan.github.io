<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mobile | Tales of a Developer Advocate]]></title>
  <link href="http://paul.kinlan.me/categories/mobile/atom.xml" rel="self"/>
  <link href="http://paul.kinlan.me/"/>
  <updated>2015-01-18T11:10:56+00:00</updated>
  <id>http://paul.kinlan.me/</id>
  <author>
    <name><![CDATA[Paul Kinlan]]></name>
    <email><![CDATA[paul.kinlan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What do people want from a news experience?]]></title>
    <link href="http://paul.kinlan.me/what-news-readers-want/"/>
    <updated>2014-12-08T17:15:00+00:00</updated>
    <id>http://paul.kinlan.me/what-news-readers-want</id>
    <content type="html"><![CDATA[<p>One thing that I am working on at the moment is breaking up each of the verticals
that define an app (News, Retail, Games, Travel, Media etc) and working out
what use-cases they need and how web technology can solve them.  </p>

<p>An area that I am really interested in is News apps, many organisations report that the only
place that they are seeing growth in engagment and revenue is on Mobile,
specifically Mobile Apps.</p>

<p>In Developer Relations we often think of what cool demo can we build with a
new API.  This time I have decided that rather than start with what I think a
developer wants (i.e, shiney demo), I would instead start by asking users what
they want from a “News experience” and then tailor our developer message
accordingly.</p>

<p>I posit that users want (in order of priority):</p>

<ul>
  <li>Notifications of important news as it happens</li>
  <li>An icon on the launcher so it can be loaded like an app</li>
  <li>News available to them offline (i.e, when they are in the tube)</li>
  <li>A fast site</li>
</ul>

<p>My own intuition of an industry I am not too heavily involved in probably can’t
be trusted as much as I think it can, so I sent out a terrbily worded Tweet.</p>

<blockquote class="twitter-tweet" lang="en"><p>What to Native News paper apps do that you can&#39;t do on the web?</p>&mdash; Paul Kinlan (@Paul_Kinlan) <a href="https://twitter.com/Paul_Kinlan/status/539737443055185921">December 2, 2014</a></blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>This got a number of interesting replies:</p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/Paul_Kinlan">@paul_kinlan</a> Offline caching &amp; UX speed, mostly. Compare <a href="http://t.co/9W28fXbyvB">http://t.co/9W28fXbyvB</a> with WSJ iPad app. And, v important, one-tap iTunes payment</p>&mdash; Benedict Evans (@BenedictEvans) <a href="https://twitter.com/BenedictEvans/status/540027507488346112">December 3, 2014</a></blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>In the entire thread it boiled down to:</p>

<ul>
  <li>Performance, apps are percieved to be faster and smoother</li>
  <li>Access to content offline</li>
  <li>Content synced and available</li>
  <li>Notifications of new content</li>
  <li>Efficient payments</li>
  <li>and icon in the launcher.</li>
</ul>

<p>It’s not that I didn’t believe this (it is broadly what I have in our 2015
plans) but I wanted to try and validate the results. I decided to try
<a href="http://www.google.com/insights/consumersurveys/">Google Consumer Surveys</a>
(other good survey tools might exist but I think it is rather awesome), it seemed
like an awesome tool to do the analysis and had a decent sized user base.</p>

<p>My goal was to find out: of the people who prefer to read their news in an App,
what do they prefer about it? The sample was constrained to US users of an
Android Smartphone, the prime audience of App using News consumers if reports
are accurate.</p>

<p>The first question: How do you prefer to consume the news? Is a filter and offers 
“In an app”, on the “web” or “Other” (Other is a mandatory escape hatch).  If the user
selected “in an app” they were taken to a 2nd set of questions to learn more
about what they value in a News App experience.</p>

<p>The second question was: What features do you want from a news experience?  This was a multi-choice question
so you had the option of select as many features as you wanted from the list:</p>

<ul>
  <li>Notifications for new content</li>
  <li>News automatically available in the morning</li>
  <li>News available offline</li>
  <li>An icon on the homescreen</li>
  <li>Smooth navigation</li>
</ul>

<p>The results were interesting. Of the people surveyed, <a href="http://www.google.com/insights/consumersurveys/view?survey=xqnkc3hqtrucy&amp;question=1">most preferred to
consume the news on the web</a>.</p>

<p><img src="/images/news-web-vs-app.png" alt="Web vs Native" /></p>

<p>It might be worth following up this survey in a couple of months or a year to
see what the trajectory is.  Maybe that 30% of people who prefer an app for
reading the news is up from 5% last year. Who knows?</p>

<p>Whilst this was an interesting aside the most important thing is to understand
what in the App world people really like.</p>

<p>The results of the features that people want from a News reading experience
did suprise me.</p>

<p><img src="/images/news-app-features.png" alt="App features" /></p>

<p>The <a href="http://www.google.com/insights/consumersurveys/view?survey=xqnkc3hqtrucy&amp;question=2">vast majority of App users preferred speed and smoothness</a> in
their reading experience and they want the news available in the morning.</p>

<p>Why is this a suprise? </p>

<p>Performance is a given.  My suprise was that if you make it fast and make the content 
available in the morning you would make 90% of users happy.  </p>

<p>If you look at the what the Chrome team and standards bodies are building - the Push API in particular - having a News Web experience integrate the API will only increment the user satisfaction a small amount.</p>

<p>This is not what my intuition suggested.  Are we working on the wrong priorities?</p>

<p>So what now?  It is clear that we need to do more research when understanding
how we tell developers to integrate our platform features.  With regards to
News I do want to tailor our developer messaging to a number of important areas
with News being one of them, I just need to work out how to do it. Some thoughts:</p>

<ul>
  <li>It is clear that we need to drive it home to developers that it is possible
to build fast and smooth experiences on the web and show them how to do it.</li>
  <li>Show developers how to build experiences that install, work offline and sync
when users want them to.</li>
</ul>

<p><em>TL;DR</em> We need to show developers how to build great apps on the web in the contexts they expect.</p>

<p>All the results are available for <a href="http://www.google.com/insights/consumersurveys/view?survey=xqnkc3hqtrucy&amp;question=1">everyone to read</a>. </p>

<p>I would love your feedback.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Living with Web Apps]]></title>
    <link href="http://paul.kinlan.me/living-with-web-apps/"/>
    <updated>2014-08-20T17:15:00+01:00</updated>
    <id>http://paul.kinlan.me/living-with-web-apps</id>
    <content type="html"><![CDATA[<p>As a Developer Advocate for Google Chrome and the Web it is my job to build a 
picture of how the Web works and educate developer on how to build for it, but 
also craft a vision for how developers should build for the future starting 
today.</p>

<p>I am a firm believer that we should be building and deploying apps on the web 
powered by a runtime that is the browser. The web offers a medium that is 
frictionless for user to engage with. A user can just visit your URL… you get 
it, but can we go day to day using just the web on mobile?</p>

<p>I decided to spend a day using only the web for all the tasks that people use 
their mobile phone for. No exceptions. Everything interaction that I do <strong>must</strong> 
be via the web.</p>

<p><strong>TL;DR — the 10 deadly sins of a mobile web app </strong>— You can get stuff done, but 
there are a lot of rough edges that stop you from doing the things that you need 
to. Some of the issues are not anything the developer can do just yet, it is the 
platform that they are fighting against. Luckily, I know what is coming on the 
platform so I am very optimistic that the feature gap will be reduced for Apps 
on the web. </p>

<p>Ultimately this experiment has shaped the way that I want us (Chrome Developer 
Relations) to get developers building for the web today and tomorrow. </p>

<ol>
  <li><strong>It’s not mobile</strong>: Some of the newer services have good mobile web 
experiences but there are huge areas where web developers still think desktop 
first or desktop only.</li>
  <li><strong>Lack of focus</strong>: It sometimes feels like Web Apps are often considered as 
documents with functionality in.  There is some functionality, then a 
document thanking everyone who helped.  Play 2048 as an example.</li>
  <li><strong>Discovery is a massive issue</strong>: Finding great web apps is incredibly hard 
and I have little confidence that they work well on mobile even when I see a 
top link in Google.</li>
  <li><strong>Everything is ephemeral</strong>: This is great for a lot of experiences; I pick 
up a site use it once and I am done. There are a huge number of apps — all 
communications apps for example — where I need the app to live in the 
background to be able to deliver notifications but they can’t.</li>
  <li><strong>It’s not interconnected</strong>: Everything appears to operate in a silo or 
everything is tightly coupled to a service. I don’t use dropbox, I use drive, 
now I can’t use your service to save my stuff.  I light-weight mechanism for 
interconnecting apps would really help. </li>
  <li><strong>Everything is monolithic</strong>: I found it incredibly hard to find small 
self-contained mobile apps that just solved my problem without being a 
service that I had to sign-up for and adopt. </li>
  <li><strong>Everything needs credential but nothing keeps credentials</strong>: I have to 
either create an account or re-sign in to everything all the time. I can’t 
tell if it is a hangover from the shared desktop era that means web apps must 
be logged out after use. This is not something I experience in many mobile 
apps. I log in once.</li>
  <li><strong>It’s slow and ugly out there</strong>: There is a serious lack of polish in many 
experiences; I had very little confidence that the apps would offer what I 
wanted when I found them and when I used them there were a lot of jarring 
animations and transitions.</li>
  <li><strong>White screens rule the day</strong>: Offline was not a big issue for me, however 
white pages in transitions really annoyed me; I found myself just waiting for 
the screen to load and getting frustrated when my entire UI was rebuilt.</li>
  <li><strong>The platform has a lot of features, just not the right ones</strong>: This is a 
meta-point, but if feels like the API space on the web does not yet cater for 
even the basic type of interaction with my device that I need; Notifications 
and Push Messaging were greatly missed.</li>
</ol>

<p>There are about apps that I want to build now. I am sorely tempted to start a 
movement getting people to build <strong>good</strong> utility apps.</p>

<h2 id="journal-the-experiment">Journal: The Experiment</h2>

<p><strong>11:30 PM — The night before the experiment</strong><br />
If I had been smart marketing type person I would have run this experiment on 
Wednesday, but alas I am a simple man with simple ideas.</p>

<p>The night before “Web App Thursday” — an evening I like to now call Shrove 
Wednesday, a day of native app gluttony —  I set up my home screen to launch the 
apps that I use regularly.</p>

<p><img src="/images/homescreen.jpg" alt="My homescreen" /></p>

<p>The first thing that I noticed is the inconsistent usage of launcher icons 
across all service. Services that you would expect to have good “app” icons just 
don’t (notably all by the company that I work for — bugs have been raised) many 
services that I relegated to my 2nd screen didn’t even have favicons.</p>

<p>It totally slipped my mind that I needed to replace the camera, dialer and SMS. 
Later when I realized to further compound my issues I had an existential crisis 
about the browser being a native app, but I chose to ignore that and keep this 
simple.</p>

<p>With my “workflow” set up I went to bed, watched some QI from the Netflix App 
that was integrated with my Chrome Cast. Bliss…</p>

<hr />
<p><strong>5:53 AM — Youngest son sits on my head to wake me up</strong><br />
Seriously. He sits on my head.<br />
Groggily I roughly remember something about only using the web today before I 
fall back asleep.</p>

<p><strong>6:00 AM — Web App Thursday. BZZZZ. BZZZZ. BZZZZ</strong></p>

<p>Alarm wakes me up. Trundle across to my phone to snooze the damn thing and start 
to feel optimistic about my day using only the web on my phone. Now I am not the 
sharpest fork on the shelf, but as I am walking to the loo (phone in hand) I 
realize that I have already failed. Alarm clock is a Native App.</p>

<p>Whilst I deal with the fact that I am a failure I notice that it is impossible 
to find web based alarm clock apps that work on mobile which kind of makes 
sense; There is no API yet that will let you background an app and get it to 
wake up at a specific time. However the more frustrating this is that even 
countdown timers are hard to find and when you do find them in search they are 
all aimed at desktop.</p>

<p>Some people have managed to get around the API issues by using Flash but:</p>

<ol>
  <li>Flash is not an option on mobile</li>
  <li>You have to have the page always open</li>
  <li>They are ugly</li>
</ol>

<p><strong>6:15 AM — …</strong><br />
<strong>6:25 AM — The dead leg walk downstairs</strong><br />
Enthused that the rest of my day was likely to be gassing on Twitter or checking 
emails I reset my experiment status. </p>

<p>At this point I also thought I need a shift in narrative; logging everything by 
time is a pain (I can’t find a good app for it). Not only is it hard to write 
like this, but it also really hard to find an app that keeps a time ordered log 
of what happened and when.</p>

<p>It is a lot easier to write based on the tasks that I needed to complete during 
the day.</p>

<h2 id="use-cases">Use cases</h2>

<p>I took copious notes during the day of things that worked well and areas that 
were frustrating. I have broken the results down into use cases that were 
important to me.</p>

<h3 id="being-prompted-at-certain-times">Being prompted at certain times</h3>

<p>I found a couple of Countdown timers but that is about it. Alarms are pretty 
much standard on mobile devices so there is a question about the need to do this 
on the web.  I only wanted to do two things: </p>

<ul>
  <li>Set a quick alarm based on a fixed time</li>
  <li>Quickly set a countdown for X minutes</li>
</ul>

<p>The latter we can do, but I can’t find good apps.  The former can’t be done when 
the browser is backgrounded.</p>

<h3 id="note-taking">Note taking</h3>

<p>I did a quick search for a note taking apps on the web and there were a few but 
interestingly my overriding need was something that I could just quickly start 
taking notes in.  I didn’t want to sign up for services or cloud integration, I 
just wanted to start taking notes. </p>

<p>I use Google Keep at work and have never tried it on the web on mobile but I 
thought I should give it a go I couldn’t really find anything better quickly.</p>

<p>To my surprise Google Keep works quite well on the mobile web. With a couple of 
exceptions:</p>

<ol>
  <li>It can’t run full screen like a native app, it doesn’t even have a launcher 
icon.</li>
  <li>I can’t share something to it (like a link) to create a note</li>
  <li>The navigation bar Janks.</li>
  <li>Offline… er, no.</li>
</ol>

<h3 id="communicating-with-people">Communicating with People</h3>

<p>A lot of my time on my phone is spent communicating with people. Email, Twitter, 
G+ and SMS are my main medium, voice less so. </p>

<p>During the day Email (gmail in particular) worked well although it is out-dated 
in terms of modern web based UI’s with some quirks in the typing experience and 
that focus highlighter is annoying.</p>

<p>Twitter also worked pretty well, I could post, DM and search. It launches 
fullscreen, it feels like an app (heck I can even load it offline) and it loads 
very quickly and provided 90% of what I needed. The web experience on mobile is 
still last years site, it doesn’t look like any of the native mobile 
experiences.</p>

<p>Twitter and Email were the first apps that I noticed that the “ephemeral” nature 
of the web significantly hindered my ability to communicate with friends and 
family. Earlier in the day I had turned off system notifications and none of 
these experiences have the ability to live in the background and notify me when 
an interesting interaction occurs. After about 4 hours of a quiet morning I 
ended up turning them back on so at least I knew when I should check for 
updates.</p>

<p>The web is not fully integrated in to the native communication stack. There are 
no dialers. There are no Web based SMS apps and whilst you can just about create 
an SMS from the web, you can’t send or read them directly via a web app.  I have 
an open question about </p>

<h3 id="reading-news-and-content">Reading News and Content</h3>

<p>Hacker News and Reddit are terrible on mobile. Seriously, I don’t get why they 
don’t even try. I am being hard on Reddit because they have at least<a href="http://reddit.com/.compact"> 
</a><a href="http://reddit.com/.compact">.compact</a> but they 
steer everyone away into apps.</p>

<p>I am an extensive user of Google Play Newsstand app on Android, it does a decent 
job of getting me the content I want to read both Purchased and also “web 
available”. I had no idea what to expect checking this site on the mobile web 
and to my surprise I can read my subscription content but it is a bare bones 
experience, there is no ‘text’ mode (it is only images) and the gestures don’t 
work the same.  I was disappointed to find that the “web article” reading mode 
is not supported at all.</p>

<p>Many news sites worked great (even if they did m.* redirects).  None of them 
felt like “app experiences” and this is interesting because many news sites are 
reporting more engagement and reading inside apps.</p>

<h3 id="watching-video-and-listening-to-audio">Watching Video and Listening to Audio</h3>

<p>I watch a lot of video and listen to podcasts quite frequently and I wasn’t 
expecting a huge amount in terms of mobile web experience.</p>

<p>I made sure that I used the mobile web version of YouTube.  It is a pretty good 
experience although it lacks the UX smoothness of the native app.  I did find 
that very frequently the browser wouldn’t render any of the visible content (but 
would play the video) and I wasn’t able to isolate the exact circumstances.</p>

<p>I was very pleased to find that Google Play Movies works even with protected 
content.  There were a couple of small scrolling issue left to right and the 
media player appears to be YouTube. Whilst the entire UI is very clunky and slow 
it works.</p>

<p>For podcasts Player.fm is my client of choice and it works pretty well on 
mobile. The audio plays even when I background the application, however there 
are no controls to let you play or pause the sound or even get back to the site 
easily once you have backgrounded Chrome.</p>

<h3 id="camera">Camera</h3>

<p>My two sons were doing something cute and I needed to take a photo quickly. As 
far as I can tell there are no “Camera apps” on the web for mobile, ones I found 
were optimized for desktop, used Flash and didn’t save directly to my phones 
gallery.</p>

<p>Once I had taken the photos, I wanted to quickly crop the images and apply some 
filters to share them out. Yup. You guessed it. I couldn’t find any apps that do 
this.  </p>

<p>This is one of the areas where I completely bailed on the web and it frustrated 
me.  I can’t retrieve and modify the photo’s on my device in a seamless manner.</p>

<p>I also took some time to think about how a developer might build the camera 
experience and naturally my first thought was to use “getUserMedia” API. If you 
look further into this API then it doesn’t offer any <a href="https://code.google.com/p/chromium/issues/detail?id=343894">advanced features</a> that you expect in a <em>good</em> camera app: focus, flash, zoom etc. It is clear that this API 
has been designed for use in P2P applications and not as a dedicated camera 
experience.</p>

<h3 id="gaming">Gaming</h3>

<p>I found <strong>one</strong> great game during the day that took up a good chunk of down 
time:<a href="http://buff.ly/1nLSjtT"> </a><a href="http://buff.ly/1nLSjtT">Game about Squares</a> is 
a brilliant, simple, mobile optimized game. Don’t get me wrong, 2048 is a great 
game and it works on the mobile web however it has a very document feel to it.<br />
I found that games suffered all the same problems of Apps:  I can’t find them, 
they feel like documents rather than apps and more often than not they are still 
desktop games.</p>

<h2 id="pervasive-issues-over-the-day">Pervasive Issues over the day</h2>

<h3 id="lack-of-confidence">Lack of Confidence</h3>

<p>I really had no confidence in many of the apps that I found. </p>

<ul>
  <li>Some experiences I wanted them to load instantly when launched, the white 
screen for loading felt like I was gambling at every moment.</li>
  <li>I got a white screen so frequently it got really frustrating when 
transitioning between pages that I couldn’t tell if it was Chrome or the App 
that is causing the problem or just the way we build apps.</li>
  <li>I had no idea that any of the apps would do what I wanted.</li>
</ul>

<h3 id="white-screens-follow-me-around-everywhere">White screens follow me around everywhere</h3>

<p>In nearly every app and site I used I felt like the majority of my time was 
spent waiting for content to load. It was really frustrating, when I use native
apps I very rarely get this.  Whilst I see in natvie apps that there are placeholders
for the content to load I still get to see the entire app UI.</p>

<h3 id="jankstutter-is-pervasive">Jank/Stutter is pervasive</h3>

<p>Watching UI elements move on the screen was toe-curling.   Navigation trays 
seemed to be a big offender during the day.  I would often click on the tray 
icon, wait, and then see a 4fps animation.</p>

<p>That being said, there are some sites that work really well.  The twitter app 
and g+ app both have really great scrolling on my phone.</p>

<h3 id="notifications">Notifications</h3>

<p>I knew going in to this that we don’t have background push messaging and 
notifications, but it is not until you don’t have them do you realise it is one 
of the primary ways that you engage with your applications on your device.</p>

<h3 id="form-filling">Form filling</h3>

<p>I tried to book my hotel that I stay in during the week on mobile.  I had to 
bail and go to desktop, it was terrible.  The site wasn’t optimised for mobile, 
but at the same time I was just cautious anytime that I had to enter text.</p>

<h3 id="sharing-content">Sharing Content</h3>

<p>There are lots of things that I create on my phone every day and I can’t share 
them with any web services.  When I took a picture of the kids I was forced to 
take the photo with an app and share it via an app.  Likewise when I wanted to 
share something from the browser I couldn’t share it to any other web 
experience, I kept having to share it to a native app.</p>

<p>Add to this Chrome is pretty poor at sharing content natively.  You can’t long press on 
images or links and share them out (these were the only things I needed to share 
in the day).</p>

<h3 id="lack-of-basic-device-interaction">Lack of basic device interaction</h3>

<p>I get that we have access to geo-location and device orientation, but I also 
found that I wanted to do simple things such as selecting and saving images to 
and from my photo gallery in a near seamless fashion and I couldn’t do it.  If I 
was playing audio on a page I would have loved to be able to control that from 
the lock screen and I couldn’t do it, I had to go tab hunting.  I also really 
wanted to have a camera app that I could trust and do basic actions on (focus 
and flash) and I couldn’t do it.</p>

<h3 id="discovery">Discovery</h3>

<p>It is hard to find apps.  It is even hard to find good apps that work well.  It 
felt impossible to find good apps that work well and have a nice user 
experience.  I had to rely on my social network to find apps.  Search sometimes 
did find web apps for some common use-cases, but it doesn’t rank quality.  Both 
the Chrome Web Store and Firefox marketplace are not great, CWS is impossible to 
navigate on mobile, FF is a lot better.  Neither let you launch a hosted web app 
directly from an app result.  </p>

<p>This was so frustrating, the only places that I  know has apps and I can’t do anything 
with it.</p>

<h3 id="lack-of-small-utilities">Lack of small utilities</h3>

<p>Most of the time I wanted some small apps to help me complete a task, these 
might exist, but even after deep searches for them the utilities are primarily 
desktop only, horrible user experiences, large services that need registration 
or they don’t exist.  There are about 20 simple core utility apps that we should 
build on the web and market them as “the primary” web experiences.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This is the web platform]]></title>
    <link href="http://paul.kinlan.me/this-is-the-web-platform/"/>
    <updated>2014-02-24T17:15:00+00:00</updated>
    <id>http://paul.kinlan.me/this-is-the-web-platform</id>
    <content type="html"><![CDATA[<table>
  <thead>
    <tr>
      <th>Feature</th>
      <th>On Desktop</th>
      <th>On Mobile</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>PNG alpha transparency</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>querySelector/querySelectorAll</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>getElementsByClassName</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Multiple backgrounds</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Background-image options</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Table display</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Generated content</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS 2.1 selectors</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 selectors</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Text-shadow</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Colors</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Box-sizing</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Media Queries</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Multiple column layout</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Canvas (basic support)</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Cross-document messaging</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Data URIs</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>XHTML served as application/xhtml+xml</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Opacity</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>JSON parsing</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Text-overflow</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Overflow-wrap</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS min/max-width/height</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS inline-block</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>dataset &amp; data-* attributes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Counters</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>getComputedStyle</td>
      <td> </td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>contentEditable</td>
      <td>Yes</td>
      <td> </td>
    </tr>
    <tr>
      <td>Drag and Drop</td>
      <td>Yes</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<p>Pretty damning.</p>

<p>At “100%” coverage of features that are in all browsers split by Mobile and Desktop then this is all we have to play with.</p>

<p>Ok, this is actually misleading.  If you are <a href="http://ondesktop.iwanttouse.com/#cors">willing to miss out on 1% extra reach for your desktop</a> audience then you can get similar feature parity with mobile.  But still the feature support that is ubiquitous across the web is actually pretty small especially if you are supporting IE8.</p>

<h2 id="how-do-i-know-what-the-web-platform-is">How do I know what the web platform is?</h2>

<p>Last year I built <a href="http://iwanttouse.com">iwanttouse.com</a> to make it easier for you to determine the cost on your userbase supporting certain features will have.  <em>If I support X, I can only reach Y% of the web’s users</em></p>

<p>The project is pretty simple.  It is a projection of the data on <a href="http://caniuse.com">CanIUse.com</a>. For a given “feature” it looks for the earliest version on a platform that it was supported on and sums the “usage”.  </p>

<p>I split the feature set by <a href="http://onmobile.iwanttouse.com">Mobile</a> and <a href="http://ondesktop.iwanttouse.com">Desktop</a> and it gives you some pretty interesting nuggets of data.</p>

<p>Two things that fell out of this: </p>

<ul>
  <li><strong>Features for Free</strong>.  If I choose <a href="http://www.iwanttouse.com/#audio-api">Web Audio</a> (43% on mobile) I can also safely use other features such as <a href="http://www.iwanttouse.com/#eventsource">Server-sent DOM Events</a> because all browsers that support the former support the latter. (Note: the inverse relationship is not always true)</li>
  <li><strong>Ubiquitous Platform features</strong>.  As above but platform features that we can rely on being present in all browsers with any significant share.</li>
</ul>

<p>I want to focus on <strong>Ubiquitous Platform features</strong>.</p>

<h2 id="how-do-we-improve-the-web-platform">How do we improve the web platform?</h2>

<p>As a web developer today I face a couple of problems: Legacy browsers that aren’t updated and inconsistent implementation across browsers.  </p>

<p>The web feels like a pirate ship, everyone is hacking and slashing in different directions and we are lucky enough that the ship goes forwards.  Slowly.  How do we become a <a href="http://en.wikipedia.org/wiki/Ben_Ainslie">Ben Ainslie</a> America’s Cup winning yacht?… (Ack, I can’t believe I said that).  Point is, how can we improve the modern mobile web consistently if there are multiple large players in the eco-system?</p>

<ol>
  <li>Wait it out and let the Browser vendors do their thing.  This will change over time as people move off the platforms that have stopped progressing as their devices are renewed.</li>
  <li>Ignore the old browsers and the users that use them and go for it.</li>
  <li>Push for consistency across the platform.</li>
</ol>

<p>My preference is for 2 and 3.  But actually 1 is what we <em>really</em> <strong>really</strong> need to solve.</p>

<p>I like to solve level 1 problems — problems with a technical solution — they’re the things I can fix.  I can meet developers and work with them on their sites to measurably make the web better one large site at a time, but it is all small scale…</p>

<p>I decided to take a peek at the features that are supported across the latest mobile browsers and the reach that will have:  <strong><a href="http://onmobile.iwanttouse.com/#geolocation,flexbox">44%</a></strong>.  We can’t honestly say to a business that you should build experiences for 44% of your potential user base (well, it depends who you want to sell or attract - your demographics might be highly skewed - i.e.. Government legislation, Business demands.)</p>

<p>If you look at the  head of the mobile web (44%) there is a compelling feature set.  You can build some amazing applications with it.</p>

<table>
  <thead>
    <tr>
      <th>Feature</th>
      <th>Android Browser 4.4</th>
      <th>iOS Safari 7.0</th>
      <th>Chrome for Android 32.0</th>
      <th>IE Mobile 10.0</th>
      <th>Opera Mobile 16.0</th>
      <th>Firefox for Android 26.0</th>
      <th>Blackberry Browser 10.0</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>XHTML served as application/xhtml+xml</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>XMLHttpRequest 2</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>WOFF - Web Open Font Format</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Web Workers</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Web Sockets</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Video element</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>ECMAScript 5 Strict Mode</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Typed Arrays</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Transforms</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Text-overflow</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>SVG in HTML img element</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Inline SVG in HTML5</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>SVG filters</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>SVG in CSS backgrounds</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>SVG (basic support)</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>defer attribute for external scripts</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>async attribute for external scripts</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>requestAnimationFrame</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>rem (root em) units</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>querySelector/querySelectorAll</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>PNG alpha transparency</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Page Visibility</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS outline</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Offline web applications</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Web Storage - name/value pairs</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Multiple backgrounds</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS min/max-width/height</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>matchMedia</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>JSON parsing</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Range input type</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>input placeholder attribute</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS inline-block</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>sandbox attribute for iframes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>New semantic elements</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Session history management</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Hashchange event</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>getElementsByClassName</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>getComputedStyle</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Geolocation</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>@font-face Web fonts</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>FileReader API</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Colors</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Transitions</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Text-shadow</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Table display</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 selectors</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS 2.1 selectors</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Repeating Gradients</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Opacity</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Media Queries</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Gradients</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Generated content</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Counters</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Box-shadow</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Animation</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Cross-Origin Resource Sharing</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>contenteditable attribute (basic support)</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>classList (DOMTokenList )</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Text API for Canvas</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Canvas (basic support)</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>calc() as CSS unit value</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Border-radius (rounded corners)</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Background-image options</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Audio element</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Cross-document messaging</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 3D Transforms</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>MPEG-4/H.264 video format</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Data URIs</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>dataset &amp; data-* attributes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS position:fixed</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Content Security Policy</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Blob constructing</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Overflow-wrap</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Progress &amp; Meter</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Flexible Box Layout Module</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
    </tr>
  </tbody>
</table>

<p>But like I said. <em>44%</em>.  It’s a big head but not a feasible platform for the vast majority of companies.  I produced the following breakdown of features that we should get Chrome and other vendors to fix feature support at a tactical level to make for a more consistent web and make developers lives easier.  The problem is we are only fixing it for <em>44%</em> of the web’s users.  <em>Documented below for consistency</em></p>

<table>
  <thead>
    <tr>
      <th>Feature</th>
      <th>Android Browser 4.4</th>
      <th>iOS Safari 7.0</th>
      <th>Chrome for Android 32.0</th>
      <th>IE Mobile 10.0</th>
      <th>Opera Mobile 16.0</th>
      <th>Firefox for Android 26.0</th>
      <th>Blackberry Browser 10.0</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>TTF/OTF - TrueType and OpenType font support</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Unknown</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Touch events</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Navigation Timing API</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Mutation Observer</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Intrinsic &amp; Extrinsic Sizing</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Font feature settings</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>File API</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Server-sent DOM events</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 tab-size</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Channel messaging</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Border images</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Blob URLs</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Viewport units: vw, vh, vmin, vmax</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>SVG SMIL animation</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>IndexedDB</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>CSS3 word-break</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>SVG fonts</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Download attribute</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Details &amp; Summary elements</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Filter Effects</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Multiple column layout</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>Date/time input types</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>Partial</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>HTML5 form features</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>Form validation</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS3 Box-sizing</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>WAI-ARIA Accessibility features</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>SVG effects for HTML</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>No</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>matches() DOM method</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>HTML templates</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Strict Transport Security</td>
      <td>Yes</td>
      <td>Unknown</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>getUserMedia/Stream API</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Color input type</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Feature Queries</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Clipboard API</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>No</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>Canvas blend modes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Ruby annotation</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>No</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>Number input type</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>No</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>DeviceOrientation events</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>No</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>WebGL - 3D Canvas graphics</td>
      <td>No</td>
      <td>No</td>
      <td>Partial</td>
      <td>No</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Web Notifications</td>
      <td>Partial</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Partial</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Full Screen API</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Partial</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>WebP image format</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>SVG fragment identifiers</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Shadow DOM</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>WebRTC Peer-to-peer connections</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>MathML</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Filesystem &amp; FileWriter API</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Masks</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>No</td>
      <td>Partial</td>
      <td>No</td>
      <td>Partial</td>
    </tr>
    <tr>
      <td>Web Audio API</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>WebM video format</td>
      <td>Partial</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Partial</td>
      <td>Partial</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Datalist element</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>CSS Hyphenation</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>CSS Regions</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>Partial</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Promises</td>
      <td>No</td>
      <td>No</td>
      <td>Partial</td>
      <td>No</td>
      <td>No</td>
      <td>Partial</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Scoped CSS</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Shared Web Workers</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Opus</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Ogg/Theora video format</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>JPEG XR image format</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Drag and Drop</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>CSS resize property</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>CSS Grid Layout</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Yes</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Pointer events</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>Partial</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>CSS3 object-fit/object-position</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Toolbar/context menu</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>CSS Variables</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Blending of CSS image</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
      <td>No</td>
    </tr>
  </tbody>
</table>

<p>Getting these features implemented would be cool but there is no additional reach at all. More users will not be affected by these new features.  We didn’t increase the size of the user base.  Yes we might get an amazing WebGL based WebComponents app that people use  but will they upgrade their browser or phone to be able to use it?  Probably not.</p>

<h2 id="so-what-do-we-do">So what do we do?</h2>

<p>How do we move the web platform forward in a meaningful way?  </p>

<p>It is hard.</p>

<p>Do we want to get back to a world where this is a thing?</p>

<p><img src="/images/ienetscape.jpg" alt="best viewed in" /></p>

<p>Maybe.???</p>

<p>At a minimum we should:</p>

<ul>
  <li><a href="http://www.iwanttouse.com/#css-boxshadow">Build for the 90%</a> and get your partners and customers to see at a minimum the experience that you can build with a huge amount of reach.</li>
  <li><a href="http://caniuse.com">Understand the choices</a> you make and the <a href="http://iwanttouse.com">impact they have</a>. Push your customers and partners to use progressive enchancement.  Don’t exclude a huge number of users for a single feature.</li>
  <li>Push for consistency over new platform features across all browser vendors.</li>
</ul>

<p><a href="https://twitter.com/intent/tweet?text=.%40Paul_Kinlan+you+are+wrong+about+the+web+because...">Tell me I am wrong</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experiments in buildinig a mobile friendly table of contents]]></title>
    <link href="http://paul.kinlan.me/experiments-in-buildin-a-mobile-friendly-table-of-contents/"/>
    <updated>2013-06-13T07:24:00+01:00</updated>
    <id>http://paul.kinlan.me/experiments-in-buildin-a-mobile-friendly-table-of-contents</id>
    <content type="html"><![CDATA[<p>My current focus is on the mobile web.  Everything I do need should be to help developers “get” mobile.  With this in mind, I was skiming <a href="http://html5rocks.com">html5rocks</a> on my nexus, and I was struck by the fact that I could not see any content on the first page.  Not good.</p>

<p>There are a couple of things that <a href="https://github.com/html5rocks/www.html5rocks.com/issues/392">we</a> <a href="https://github.com/html5rocks/www.html5rocks.com/issues/390">need</a> <a href="https://github.com/html5rocks/www.html5rocks.com/issues/386">to</a> <a href="https://github.com/html5rocks/www.html5rocks.com/issues/384">fix</a> on HTML5Rocks when it comes to mobile.  Today I am going to focus on the Table of Contents. </p>

<p>The Table of Contents (ToC), depending on the article can be 1/2 a screen in height to 3 screens in height. However you look at the it, you have to scroll to be able to start reading the content. The Table of Contents is also rooted at the top of the document, which on mobile means that I have to scroll all the way to the top to be able to navigate around or understand the structure.  Argh.</p>

<p>Just have a look at one of the current articles. Yes the header is too large, but even this small ToC is blocking us from reading the content.</p>

<p><img src="http://paul.kinlan.me/images/tocbad.png" /></p>

<p>I am working off the idea that if we can get the user to the content quicker, we will improve our read-time, reduce our bounce-rate and create an all-round better experience for developers who read the content we produce.</p>

<p>There are some constraints though:</p>

<ol>
  <li>ToC help you navigate around the page so they need to be visible to the user on page load</li>
  <li>Ideally they should always be visible, or easily accessible so you can quickly jump to the parts you need</li>
  <li>Due to constraints on the screen size, they should get out of the way as quickly as possible</li>
  <li>There should be no rendered-html differences between the mobile and “desktop” versions</li>
  <li>If possible use no JS.</li>
</ol>

<p>With all these in mind I have created my first experiemental ToC. I call it the “Bottom ToC”.</p>

<p>The Bottom ToC is simply a Table of Contents anchored to the bottom of the viewport.  When the reader wants to get access to the page structure they simple tap the “ToC” area, it expands into view (whilst keeping them at the same point in their document) letting them select their next reading point.  To dismiss the ToC the user can simply clicks back in the main document.</p>

<p>Bottom ToC in its natural state:
<img src="http://paul.kinlan.me/images/tocbetter-collapsed.png" /></p>

<p>Bottom Toc expanded:
<img src="http://paul.kinlan.me/images/tocbetter.png" /></p>

<p>It’s not perfect, but I thought it was interesting enough to document.</p>

<p>So, how is it built?</p>

<p>It was a pretty simple build in the end, it required no Javascript and no changes to the rendered HTML.  It uses a combination of <code>position: fixed</code> and the <code>:active</code> pseudo class.</p>

<p>Our ToC is structured as a nested set of &lt;ul&gt; elements inside a &lt;nav&gt; element - pretty much how every menu is structured.</p>

<pre><code>&lt;nav class="outline toc"&gt;
  &lt;h3&gt;Table of Contents&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href="#toc-introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#toc-topic-sounds"&gt;Creating the sounds&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#toc-topic-sound"&gt;Engine sound&lt;/a&gt;
      &lt;ul&gt;
          &lt;li&gt;&lt;a href="#toc-topic-looks-like"&gt;Looks like this&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#toc-topic-go"&gt;Give it a go&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
   &lt;li&gt;&lt;a href="#toc-topic-sync"&gt;Getting the sync&lt;/a&gt;&lt;/li&gt;
&lt;/nav&gt;
</code></pre>

<p>The CSS is simple too.  To make it anchor to the bottom of the screen and open when the user clicks on it we do as follows:</p>

<pre><code>.outline.toc {
   position: fixed;
   bottom: 0;
   left: 0;
   right: 0;
   height: 1em;
   overflow: auto;
}

.outline.toc:active {
   height: 5em;
}
</code></pre>

<p>That’s it.  The important bits are the position: fixed, which takes the element out of the natural flow of the document and anchors it to a defined area in the viewport - in our case the bottom of the viewport.  We used the <code>:active</code> psuedo class to manage the opening and closing of the table of contents.</p>

<p><code>:active</code> is interesting on mobile as it is normally used to style an element with a id that matches the string in the document fragment of the URL (the bit after the #).  This is often the case if you click on an anchor that points to an area inside the same document.  On mobile browsers such as Safari and Chrome the <code>:active</code> class is also set when you press on any element, which leads to this effect.  The really nice thing is that when you click back in the main article, the active element changes thus hiding the menu again.</p>

<p>There are still a couple of isses to resolve so it is not the perfect solution.  For example, when the user scrolls up or down in the ToC and reaches one of the extremities the scroll event gets passed through to the parent document.</p>

<p>All in all, I think this is a neat little solution.</p>
]]></content>
  </entry>
  
</feed>

